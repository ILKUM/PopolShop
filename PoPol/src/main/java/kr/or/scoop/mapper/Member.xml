<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.scoop.dao.MemberDao">
	<!-- 일반회원가입 -->
    <insert id="insertMember" parameterType="kr.or.scoop.dto.Member">
       insert into member(email, pwd, name,iddate,point,cpoint)
       values (#{email},#{pwd},#{name},SYSDATE,300,#{cpoint})
    </insert>
	<!-- 회원가입 중복체크 -->
	<select id="loginCheck" resultType="int">
		select count(*)
		from member 
		where email = #{param1} and pwd = #{param2}
	</select>
	    <!-- 회원가입 아이디 중복체크 -->
    <select id="idCheck" resultType="int">
		select count(*)
		from member 
		where email = #{param1}
	</select>
	<!-- 로그인 비밀번호 확인 체크 -->
	<select id="pwdCheck" resultType="kr.or.scoop.dto.Member">
		select pwd from member where email = #{param1}
	</select>
	<!-- 멤버정보 가져오기 -->
	<select id="getMember" resultType="kr.or.scoop.dto.Member">
		select email,name,pwd,profile,iddate,point,cpoint from member 
		where email = #{email}
	</select>
	<!-- 멤버 등급  -->
	<select id="getRole" resultType="kr.or.scoop.dto.Role">
	select m.email , r.RNAME from member m join role r on m.email = r.email where r.email= #{email,jdbcType=VARCHAR}
	</select>
	<!-- 프로필 사진  -->
	<select id="getProfile" parameterType="kr.or.scoop.dto.Member" resultType="String">
		select profile from member where email = #{email}
	</select>
		<!-- 멤버정보 수정하기 -->
	<update id="updateMember" parameterType="kr.or.scoop.dto.Member">
		update member
		set email = #{email,jdbcType=VARCHAR}, pwd = #{pwd,jdbcType=VARCHAR}, name=#{name,jdbcType=VARCHAR}, profile= #{profile,jdbcType=VARCHAR} where email = #{email,jdbcType=VARCHAR}
	</update>
	<!-- 멤버 조회 -->
	<select id="searchMember" resultType="kr.or.scoop.dto.Member">
		select email , name, iddate, point from member 
	</select>
	<!-- 멤버 탈퇴 -->
	<delete id="banMember">
	delete from member where email=#{email,jdbcType=VARCHAR}
	</delete>
	<!-- 회원 등급 수정 -->
	<update id="updateRole" parameterType="kr.or.scoop.dto.Role">
		update role set rname = 'ROLE_CHARGE' where email = #{email}
	</update>
	<!-- 쿠폰 등록 -->
	<update id="addCoupon" parameterType="kr.or.scoop.dto.Member">
		update member set point = point+5000 , cpoint= cpoint + 1 where email = #{email}
	</update>
	<insert id="addCouponChk" parameterType="kr.or.scoop.dto.Member">
		insert into coupon (cpseq,email) values (cpseq_coupon_seq.nextval,#{email})
	</insert>
	<!-- 쿠폰 중복 체크 -->
	<select id="checkCoupon" resultType="int">
		select count(*) from coupon where email = #{email}
	</select>
	<!-- 지난기록 등록 -->
	<insert id="addHistory" parameterType="kr.or.scoop.dto.History">
	 insert into history (hseq,email,moseq) values (hseq_history_seq.nextval,#{param2},#{param1})
	</insert>
	<update id="updatePoint" parameterType="kr.or.scoop.dto.Member">
		update member set point = point - #{mpoint} where email = #{email}
	</update>
	<select id="getPoint" resultType="int">
		select point from member where email = #{email}
	</select>
	
</mapper>